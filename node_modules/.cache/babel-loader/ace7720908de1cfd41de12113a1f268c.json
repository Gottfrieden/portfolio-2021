{"ast":null,"code":"var _jsxFileName = \"/Users/geoffroy/portfolio-final/src/pages/SelectedWork.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport HorizontalScroll from 'react-scroll-horizontal';\nimport './pages.css';\nimport './selected-work.css';\nimport ProjectDescription from '../components/body/ProjectDescription';\nimport ProjectImages from '../components/body/ProjectImages';\nimport { projectsData } from '../utils/projectsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectedWork({\n  setActivePage\n}) {\n  _s();\n\n  const [data] = useState(projectsData);\n  const [index, setIndex] = useState(0);\n  const [scrollableDiv] = useState(document.getElementById('horizontal-scroll'));\n  const [animate, setAnimate] = useState(false);\n  useEffect(() => {\n    setActivePage(\"Selected Work\");\n  }, []);\n\n  const handleAnimate = () => {\n    setAnimate(!animate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"horizontal-scroll\",\n    className: \"body-container selected-work\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onScroll: handleAnimate,\n      className: \"slider-container\",\n      children: data.map((project, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-container\",\n        children: [/*#__PURE__*/_jsxDEV(ProjectImages, {\n          animate: animate,\n          data: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ProjectDescription, {\n          animate: animate,\n          data: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectedWork, \"FA+NEvte50L23Wdn/uDJvtwdpIM=\");\n\n_c = SelectedWork;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedWork\");","map":{"version":3,"sources":["/Users/geoffroy/portfolio-final/src/pages/SelectedWork.js"],"names":["React","useEffect","useState","HorizontalScroll","ProjectDescription","ProjectImages","projectsData","SelectedWork","setActivePage","data","index","setIndex","scrollableDiv","document","getElementById","animate","setAnimate","handleAnimate","map","project","i","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AAEA,OAAO,aAAP;AAEA,OAAO,qBAAP;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAyC;AAAA;;AACpD,QAAM,CAACC,IAAD,IAASP,QAAQ,CAACI,YAAD,CAAvB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACU,aAAD,IAAkBV,QAAQ,CAACW,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAD,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,aAAa,CAAC,eAAD,CAAb;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMS,aAAa,GAAG,MAAM;AACxBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,EAAE,EAAC,mBAAR;AAA4B,IAAA,SAAS,EAAC,8BAAtC;AAAA,2BAEI;AAAK,MAAA,QAAQ,EAAEE,aAAf;AAA8B,MAAA,SAAS,EAAC,kBAAxC;AAAA,gBACKR,IAAI,CAACS,GAAL,CAAS,CAACC,OAAD,EAAUC,CAAV,kBACN;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCAMI,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEL,OAAxB;AAAiC,UAAA,IAAI,EAAEI;AAAvC;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,kBAAD;AAAoB,UAAA,OAAO,EAAEJ,OAA7B;AAAsC,UAAA,IAAI,EAAEI;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,SAAyCA,OAAO,CAACE,EAAjD;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GApCuBd,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport HorizontalScroll from 'react-scroll-horizontal'\n\nimport './pages.css';\n\nimport './selected-work.css';\nimport ProjectDescription from '../components/body/ProjectDescription';\nimport ProjectImages from '../components/body/ProjectImages';\nimport { projectsData } from '../utils/projectsData';\n\nexport default function SelectedWork({ setActivePage }) {\n    const [data] = useState(projectsData)\n    const [index, setIndex] = useState(0);\n    const [scrollableDiv] = useState(document.getElementById('horizontal-scroll'));\n    const [animate, setAnimate] = useState(false);\n\n    useEffect(() => {\n        setActivePage(\"Selected Work\")\n    }, [])\n\n    const handleAnimate = () => {\n        setAnimate(!animate);\n    }\n    \n    return (\n        <div id='horizontal-scroll' className='body-container selected-work'>\n            {/* <HorizontalScroll onScroll={onScroll} reverseScroll={true} animValues={3}> */}\n            <div onScroll={handleAnimate} className='slider-container'>\n                {data.map((project, i) => (\n                    <div className='projects-container' key={project.id}\n                        // style={{ marginTop: `calc(${i} * 10px)`, marginLeft: `calc(${i} * 10px)`, opacity: `calc((${i} * 0.1) + 1)`}}\n                    >\n                        {/* <a href='#' onClick={previousSlide} className='slider-arrow left'>\n                            <span className='arrow left' />\n                        </a> */}\n                        <ProjectImages animate={animate} data={project}/>\n                        <ProjectDescription animate={animate} data={project}/>\n                        {/* <a href='#' onClick={nextSlide} className='slider-arrow right'>\n                            <span className='arrow right' />\n                        </a> */}\n                    </div>\n                ))}\n            </div> \n            {/* </HorizontalScroll> */}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}