{"ast":null,"code":"var _jsxFileName = \"/Users/geoffroy/portfolio-final/src/components/body/ProjectImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './project-images.css';\nimport ideasworxMockup from '../../images/ideasworx/mockup-ideasworx-mobile.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectImages({\n  data\n}) {\n  _s();\n\n  const [isMobile, setIsMobile] = useState(true);\n\n  const seeMobile = () => {\n    setIsMobile(true);\n  };\n\n  const seeDesktop = () => {\n    setIsMobile(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-images\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"devices-option\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `device-icon-container ${isMobile && 'active'}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: seeMobile,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mobile-icon device ${isMobile && 'active'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `device-icon-container ${!isMobile && 'active'}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: seeDesktop,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `desktop-icon device ${!isMobile && 'active'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images-container mobile\",\n      children: data.interface.mobile.map(img => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"video-player\",\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: img,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images-container desktop\",\n      children: data.interface.desktop.map(img => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: \"image one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectImages, \"pFMyR0lvDCanrk8uiR4Zfj+rxao=\");\n\n_c = ProjectImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectImages\");","map":{"version":3,"sources":["/Users/geoffroy/portfolio-final/src/components/body/ProjectImages.js"],"names":["React","useState","ideasworxMockup","ProjectImages","data","isMobile","setIsMobile","seeMobile","seeDesktop","interface","mobile","map","img","desktop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,sBAAP;AACA,OAAOC,eAAP,MAA4B,oDAA5B;;AAEA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAA+B;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMM,SAAS,GAAG,MAAM;AACpBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAGA,QAAME,UAAU,GAAG,MAAM;AACrBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAG,yBAAwBD,QAAQ,IAAI,QAAS,EAA9D;AAAA,+BACI;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEE,SAArB;AAAA,iCAAgC;AAAK,YAAA,SAAS,EAAG,sBAAqBF,QAAQ,IAAI,QAAS;AAA3D;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAG,yBAAwB,CAACA,QAAD,IAAa,QAAS,EAA/D;AAAA,+BACI;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEG,UAArB;AAAA,iCAAiC;AAAK,YAAA,SAAS,EAAG,uBAAsB,CAACH,QAAD,IAAa,QAAS;AAA7D;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAVJ,EAWKA,QAAQ,gBACL;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,gBACKD,IAAI,CAACK,SAAL,CAAeC,MAAf,CAAsBC,GAAtB,CAA0BC,GAAG,iBAC1B,QAAC,KAAD,CAAO,QAAP;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,cAAjB;AAAgC,UAAA,QAAQ,MAAxC;AAAyC,UAAA,IAAI,MAA7C;AAA8C,UAAA,KAAK,MAAnD;AAAA,iCACI;AAAQ,YAAA,GAAG,EAAEA,GAAb;AAAkB,YAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADK,gBAYL;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,gBACKR,IAAI,CAACK,SAAL,CAAeI,OAAf,CAAuBF,GAAvB,CAA2BC,GAAG,iBAC3B;AAAK,QAAA,GAAG,EAAEA,GAAV;AAAe,QAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAvBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GA1CuBT,a;;KAAAA,a","sourcesContent":["import React, { useState } from 'react';\n\nimport './project-images.css';\nimport ideasworxMockup from '../../images/ideasworx/mockup-ideasworx-mobile.jpg'\n\nexport default function ProjectImages({data}) {\n    const [isMobile, setIsMobile] = useState(true);\n\n    const seeMobile = () => {\n        setIsMobile(true);\n    }\n    const seeDesktop = () => {\n        setIsMobile(false);\n    }\n\n    return (\n        <div className='project-images'>\n            <div className='devices-option'>\n                <div className={`device-icon-container ${isMobile && 'active'}`}>\n                    <a href='#' onClick={seeMobile}><div className={`mobile-icon device ${isMobile && 'active'}`} /></a>\n                </div>\n                <div className={`device-icon-container ${!isMobile && 'active'}`}>\n                    <a href='#' onClick={seeDesktop}><div className={`desktop-icon device ${!isMobile && 'active'}`} /></a>\n                </div>\n            </div>\n\n            <div className='full-screen' />\n            {isMobile ? \n                <div className='images-container mobile'>\n                    {data.interface.mobile.map(img => (\n                        <React.Fragment>\n                            <video className='video-player' autoPlay loop muted>\n                                <source src={img} type='video/mp4' />\n                            </video>\n                            <div className='screen'/>\n                        </React.Fragment>\n                    ))}\n                </div>\n             : \n                <div className='images-container desktop'>\n                    {data.interface.desktop.map(img => (\n                        <img src={img} alt='image one'/>\n                    ))}\n                </div>\n             }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}