{"ast":null,"code":"var _jsxFileName = \"/Users/geoffroy/portfolio-final/src/components/header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { Suspense, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport '../../utils/i18n';\nimport { Trans } from 'react-i18next';\nimport './header.css';\nimport logo from '../../images/logo-empty.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default withTranslation()(_s(function Header({\n  pageName,\n  setPageName\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [isMobileNavOpen, setIsMobileNavOpen] = useState(false);\n\n  const openMobileNav = () => {\n    setIsMobileNavOpen(!isMobileNavOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: \"loading\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-navigation\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"burger-menu\",\n          onClick: openMobileNav,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: isMobileNavOpen ? 'close' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: isMobileNavOpen ? 'close' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          style: {\n            backgroundImage: `url(${logo})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"desktop-nav\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => setPageName(\"Selected Work\"),\n              className: pageName === \"Selected Work\" ? \"active\" : \"\",\n              children: t('Selected Work')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/about\",\n            className: \"desktop-nav\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => setPageName(\"About\"),\n              className: pageName === \"About\" ? \"active\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"mailto:geoffroy.crabieres@gmail.com\",\n        className: \"hire-me\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: t('Hire me')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: isMobileNavOpen ? 'mobile-nav active' : 'mobile-nav',\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            onClick: openMobileNav,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => setPageName(\"Selected Work\"),\n              className: pageName === \"Selected Work\" ? \"active\" : \"\",\n              children: t('Selected Work')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/about\",\n            onClick: openMobileNav,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => setPageName(\"About\"),\n              className: pageName === \"About\" ? \"active\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}, \"SuWcCpVzKPsb5mtnesi9CyBJ9cI=\", false, function () {\n  return [useTranslation];\n}));","map":{"version":3,"sources":["/Users/geoffroy/portfolio-final/src/components/header/Header.js"],"names":["React","Suspense","useState","Link","useTranslation","withTranslation","Trans","logo","Header","pageName","setPageName","t","isMobileNavOpen","setIsMobileNavOpen","openMobileNav","backgroundImage"],"mappings":"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","sourcesContent":["import React, { Suspense, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport '../../utils/i18n';\nimport { Trans } from 'react-i18next';\n\nimport './header.css';\nimport logo from '../../images/logo-empty.png';\n\nexport default withTranslation()(function Header({ pageName, setPageName }) {\n    const { t } = useTranslation();\n    const [isMobileNavOpen, setIsMobileNavOpen] = useState(false);\n\n    const openMobileNav = () => {\n        setIsMobileNavOpen(!isMobileNavOpen);\n    }\n\n    return (\n        <Suspense fallback=\"loading\">\n            <header>\n                <div className='mobile-navigation'>\n                    <div className='burger-menu' onClick={openMobileNav}>\n                        <span className={isMobileNavOpen ? 'close' : ''}/>\n                        <span className={isMobileNavOpen ? 'close' : ''}/>\n                    </div>\n                </div>\n                <Link to='/'>\n                    <div className='logo' style={{ backgroundImage: `url(${logo})` }}/>\n                </Link>\n                    <nav>\n                        <ul>\n                            <Link to=\"/\" className='desktop-nav'>\n                                <li onClick={() => setPageName(\"Selected Work\")} className={pageName === \"Selected Work\" ? \"active\" : \"\"}>\n                                    {t('Selected Work')}\n                                </li>\n                            </Link>\n                            <Link to=\"/about\" className='desktop-nav'>\n                                <li onClick={() => setPageName(\"About\")} className={pageName === \"About\" ? \"active\" : \"\"}>\n                                    <Trans>About</Trans>\n                                </li>\n                            </Link>\n                        </ul>\n                    </nav>\n                    <a href='mailto:geoffroy.crabieres@gmail.com' className='hire-me'>\n                        <div>{t('Hire me')}</div>\n                    </a>                \n                <nav className={isMobileNavOpen ? 'mobile-nav active' : 'mobile-nav'}>\n                    \n                    <ul>\n                        <Link to=\"/\" onClick={openMobileNav}>\n                            <li onClick={() => setPageName(\"Selected Work\")} className={pageName === \"Selected Work\" ? \"active\" : \"\"}>\n                                {t('Selected Work')}\n                            </li>\n                        </Link>\n                        <Link to=\"/about\" onClick={openMobileNav}>\n                            <li onClick={() => setPageName(\"About\")} className={pageName === \"About\" ? \"active\" : \"\"}>\n                                <Trans>About</Trans>\n                            </li>\n                        </Link>\n                    </ul>\n                </nav>\n            </header>\n        </Suspense>\n    )\n})"]},"metadata":{},"sourceType":"module"}