{"ast":null,"code":"var _jsxFileName = \"/Users/geoffroy/portfolio-final/src/components/body/ProjectImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './project-images.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectImages({\n  data\n}) {\n  _s();\n\n  const [isMobile, setIsMobile] = useState(true);\n\n  const seeMobile = () => {\n    setIsMobile(true);\n  };\n\n  const seeDesktop = () => {\n    setIsMobile(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-images\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images-container mobile\",\n      children: [data.interface.mobile.map((img, i) => /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"video-player\",\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: img,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 33\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images-container desktop\",\n      children: data.interface.desktop.map((img, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: `image ${i}`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"devices-option\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `device-icon-container ${isMobile && 'active'}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: seeMobile,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mobile-icon device ${isMobile && 'active'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `device-icon-container ${!isMobile && 'active'}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: seeDesktop,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `desktop-icon device ${!isMobile && 'active'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectImages, \"pFMyR0lvDCanrk8uiR4Zfj+rxao=\");\n\n_c = ProjectImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectImages\");","map":{"version":3,"sources":["/Users/geoffroy/portfolio-final/src/components/body/ProjectImages.js"],"names":["React","useState","ProjectImages","data","isMobile","setIsMobile","seeMobile","seeDesktop","interface","mobile","map","img","i","desktop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,sBAAP;;AAEA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAA+B;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACpBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAGA,QAAME,UAAU,GAAG,MAAM;AACrBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,QAAQ,gBACL;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,iBACKD,IAAI,CAACK,SAAL,CAAeC,MAAf,CAAsBC,GAAtB,CAA0B,CAACC,GAAD,EAAMC,CAAN,kBACnB;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,QAAQ,MAAxC;AAAyC,QAAA,IAAI,MAA7C;AAA8C,QAAA,KAAK,MAAnD;AAAA,+BACI;AAAQ,UAAA,GAAG,EAAED,GAAb;AAAkB,UAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAyDC,CAAzD;AAAA;AAAA;AAAA;AAAA,cADP,CADL,eAMI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAUL;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,gBACKT,IAAI,CAACK,SAAL,CAAeK,OAAf,CAAuBH,GAAvB,CAA2B,CAACC,GAAD,EAAMC,CAAN,kBACxB;AAAK,QAAA,GAAG,EAAED,GAAV;AAAe,QAAA,GAAG,EAAG,SAAQC,CAAE;AAA/B,SAAuCA,CAAvC;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAZR,eAkBK;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACG;AAAK,QAAA,SAAS,EAAG,yBAAwBR,QAAQ,IAAI,QAAS,EAA9D;AAAA,+BACI;AAAG,UAAA,OAAO,EAAEE,SAAZ;AAAA,iCACI;AAAK,YAAA,SAAS,EAAG,sBAAqBF,QAAQ,IAAI,QAAS;AAA3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH,eAMG;AAAK,QAAA,SAAS,EAAG,yBAAwB,CAACA,QAAD,IAAa,QAAS,EAA/D;AAAA,+BACI;AAAG,UAAA,OAAO,EAAEG,UAAZ;AAAA,iCACI;AAAK,YAAA,SAAS,EAAG,uBAAsB,CAACH,QAAD,IAAa,QAAS;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANH;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GA3CuBF,a;;KAAAA,a","sourcesContent":["import React, { useState } from 'react';\n\nimport './project-images.css';\n\nexport default function ProjectImages({data}) {\n    const [isMobile, setIsMobile] = useState(true);\n\n    const seeMobile = () => {\n        setIsMobile(true);\n    }\n    const seeDesktop = () => {\n        setIsMobile(false);\n    }\n\n    return (\n        <div className='project-images'>\n            <div className='full-screen' />\n            {isMobile ? \n                <div className='images-container mobile'>\n                    {data.interface.mobile.map((img, i) => (\n                            <video className='video-player' autoPlay loop muted key={i}>\n                                <source src={img} type='video/mp4' />\n                            </video>\n                        ))}\n                    <div className='screen'/>\n                </div>\n             : \n                <div className='images-container desktop'>\n                    {data.interface.desktop.map((img, i) => (\n                        <img src={img} alt={`image ${i}`} key={i}/>\n                    ))}\n                </div>\n             }\n             <div className='devices-option'>\n                <div className={`device-icon-container ${isMobile && 'active'}`}>\n                    <a onClick={seeMobile}>\n                        <div className={`mobile-icon device ${isMobile && 'active'}`} />\n                    </a>\n                </div>\n                <div className={`device-icon-container ${!isMobile && 'active'}`}>\n                    <a onClick={seeDesktop}>\n                        <div className={`desktop-icon device ${!isMobile && 'active'}`} />\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}