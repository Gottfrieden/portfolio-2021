{"ast":null,"code":"import _slicedToArray from\"/Users/geoffroy/portfolio-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./project-images.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ProjectImages(_ref){var data=_ref.data,animate=_ref.animate;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isMobile=_useState2[0],setIsMobile=_useState2[1];var seeMobile=function seeMobile(){setIsMobile(true);};var seeDesktop=function seeDesktop(){setIsMobile(false);};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"full-screen\"}),isMobile?/*#__PURE__*/_jsxs(\"div\",{className:\"images-container mobile\",children:[data.interface.mobile.map(function(img,i){return/*#__PURE__*/_jsx(\"video\",{className:\"video-player\",autoPlay:true,loop:true,muted:true,children:/*#__PURE__*/_jsx(\"source\",{src:img,type:\"video/mp4\"})},i);}),/*#__PURE__*/_jsx(\"div\",{className:\"screen\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"images-container desktop\",children:data.interface.desktop.map(function(img,i){return/*#__PURE__*/_jsx(\"img\",{src:img,alt:\"image \".concat(i)},i);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"devices-option\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"device-icon-container \".concat(isMobile&&'active'),children:/*#__PURE__*/_jsx(\"div\",{onClick:seeMobile,children:/*#__PURE__*/_jsx(\"div\",{className:\"mobile-icon device \".concat(isMobile&&'active')})})}),/*#__PURE__*/_jsx(\"div\",{className:\"device-icon-container \".concat(!isMobile&&'active'),children:/*#__PURE__*/_jsx(\"div\",{onClick:seeDesktop,children:/*#__PURE__*/_jsx(\"div\",{className:\"desktop-icon device \".concat(!isMobile&&'active')})})})]})]});}","map":{"version":3,"sources":["/Users/geoffroy/portfolio-final/src/components/body/ProjectImages.js"],"names":["React","useState","ProjectImages","data","animate","isMobile","setIsMobile","seeMobile","seeDesktop","interface","mobile","map","img","i","desktop"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAO,sBAAP,C,wFAEA,cAAe,SAASC,CAAAA,aAAT,MAA0C,IAAjBC,CAAAA,IAAiB,MAAjBA,IAAiB,CAAXC,OAAW,MAAXA,OAAW,CACrD,cAAgCH,QAAQ,CAAC,IAAD,CAAxC,wCAAOI,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBD,WAAW,CAAC,IAAD,CAAX,CACH,CAFD,CAGA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBF,WAAW,CAAC,KAAD,CAAX,CACH,CAFD,CAIA,mBACI,MAAC,KAAD,CAAO,QAAP,yBACI,YAAK,SAAS,CAAC,aAAf,EADJ,CAESD,QAAQ,cACL,aAAK,SAAS,CAAC,yBAAf,WACKF,IAAI,CAACM,SAAL,CAAeC,MAAf,CAAsBC,GAAtB,CAA0B,SAACC,GAAD,CAAMC,CAAN,qBACnB,cAAO,SAAS,CAAC,cAAjB,CAAgC,QAAQ,KAAxC,CAAyC,IAAI,KAA7C,CAA8C,KAAK,KAAnD,uBACI,eAAQ,GAAG,CAAED,GAAb,CAAkB,IAAI,CAAC,WAAvB,EADJ,EAAyDC,CAAzD,CADmB,EAA1B,CADL,cAMI,YAAK,SAAS,CAAC,QAAf,EANJ,GADK,cAUL,YAAK,SAAS,CAAC,0BAAf,UACKV,IAAI,CAACM,SAAL,CAAeK,OAAf,CAAuBH,GAAvB,CAA2B,SAACC,GAAD,CAAMC,CAAN,qBACxB,YAAK,GAAG,CAAED,GAAV,CAAe,GAAG,iBAAWC,CAAX,CAAlB,EAAuCA,CAAvC,CADwB,EAA3B,CADL,EAZZ,cAkBQ,aAAK,SAAS,CAAC,gBAAf,wBACI,YAAK,SAAS,iCAA2BR,QAAQ,EAAI,QAAvC,CAAd,uBACI,YAAK,OAAO,CAAEE,SAAd,uBACI,YAAK,SAAS,8BAAwBF,QAAQ,EAAI,QAApC,CAAd,EADJ,EADJ,EADJ,cAMI,YAAK,SAAS,iCAA2B,CAACA,QAAD,EAAa,QAAxC,CAAd,uBACI,YAAK,OAAO,CAAEG,UAAd,uBACI,YAAK,SAAS,+BAAyB,CAACH,QAAD,EAAa,QAAtC,CAAd,EADJ,EADJ,EANJ,GAlBR,GADJ,CAiCH","sourcesContent":["import React, { useState } from 'react';\n\nimport './project-images.css';\n\nexport default function ProjectImages({ data, animate }) {\n    const [isMobile, setIsMobile] = useState(true);\n\n    const seeMobile = () => {\n        setIsMobile(true);\n    }\n    const seeDesktop = () => {\n        setIsMobile(false);\n    }\n\n    return (\n        <React.Fragment>\n            <div className='full-screen' />\n                {isMobile ? \n                    <div className='images-container mobile'>\n                        {data.interface.mobile.map((img, i) => (\n                                <video className='video-player' autoPlay loop muted key={i}>\n                                    <source src={img} type='video/mp4' />\n                                </video>\n                            ))}\n                        <div className='screen'/>\n                    </div>\n                : \n                    <div className='images-container desktop'>\n                        {data.interface.desktop.map((img, i) => (\n                            <img src={img} alt={`image ${i}`} key={i}/>\n                        ))}\n                    </div>\n                }\n                <div className='devices-option'>\n                    <div className={`device-icon-container ${isMobile && 'active'}`}>\n                        <div onClick={seeMobile}>\n                            <div className={`mobile-icon device ${isMobile && 'active'}`} />\n                        </div>\n                    </div>\n                    <div className={`device-icon-container ${!isMobile && 'active'}`}>\n                        <div onClick={seeDesktop}>\n                            <div className={`desktop-icon device ${!isMobile && 'active'}`} />\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}